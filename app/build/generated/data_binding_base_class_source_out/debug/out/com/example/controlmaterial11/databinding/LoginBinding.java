// Generated by view binder compiler. Do not edit!
package com.example.controlmaterial11.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.controlmaterial11.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LoginBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button btningresar;

  @NonNull
  public final Button btnregistrarme;

  @NonNull
  public final ImageView imageView2;

  @NonNull
  public final LinearLayout main;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView txtRegistro;

  @NonNull
  public final EditText txtclave;

  @NonNull
  public final EditText txtusuario;

  private LoginBinding(@NonNull ScrollView rootView, @NonNull Button btningresar,
      @NonNull Button btnregistrarme, @NonNull ImageView imageView2, @NonNull LinearLayout main,
      @NonNull TextView textView, @NonNull TextView txtRegistro, @NonNull EditText txtclave,
      @NonNull EditText txtusuario) {
    this.rootView = rootView;
    this.btningresar = btningresar;
    this.btnregistrarme = btnregistrarme;
    this.imageView2 = imageView2;
    this.main = main;
    this.textView = textView;
    this.txtRegistro = txtRegistro;
    this.txtclave = txtclave;
    this.txtusuario = txtusuario;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static LoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LoginBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btningresar;
      Button btningresar = ViewBindings.findChildViewById(rootView, id);
      if (btningresar == null) {
        break missingId;
      }

      id = R.id.btnregistrarme;
      Button btnregistrarme = ViewBindings.findChildViewById(rootView, id);
      if (btnregistrarme == null) {
        break missingId;
      }

      id = R.id.imageView2;
      ImageView imageView2 = ViewBindings.findChildViewById(rootView, id);
      if (imageView2 == null) {
        break missingId;
      }

      id = R.id.main;
      LinearLayout main = ViewBindings.findChildViewById(rootView, id);
      if (main == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.txt_registro;
      TextView txtRegistro = ViewBindings.findChildViewById(rootView, id);
      if (txtRegistro == null) {
        break missingId;
      }

      id = R.id.txtclave;
      EditText txtclave = ViewBindings.findChildViewById(rootView, id);
      if (txtclave == null) {
        break missingId;
      }

      id = R.id.txtusuario;
      EditText txtusuario = ViewBindings.findChildViewById(rootView, id);
      if (txtusuario == null) {
        break missingId;
      }

      return new LoginBinding((ScrollView) rootView, btningresar, btnregistrarme, imageView2, main,
          textView, txtRegistro, txtclave, txtusuario);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
